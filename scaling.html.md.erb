---
title: Scaling Pivotal Cloud Foundry&reg; Log Search
owner: London Services
---

This document describes whether and how to scale PCF Log Search.

## <a id="need"></a>Determine if you Need to Scale

1. Search for all logs in Kibana. 

1. Determine if there is a gap in recent logs as in the image below. If so, Log Search is falling behind indexing and you need to [scale up](#scale-up) your cluster or [reduce resource usage](#resource-usage).
  ![Falling behind on log indexing](images/falling-behind-on-log-indexing.png)

## <a id="scale-up"></a>Scale Up your Cluster

1. Navigate to the **Status** tab of the PCF Log Search tile. 
  ![Log Search Status tab](images/status-tab-logsearch.png)

1. Examine the **Elasticsearch Data nodes**:
  1. If the load is high, especially if **CPU** > **50%** or **PERS DISK** > **70%**, click the **Resource Config** section and add Elasticsearch data nodes, following the table below as a guide.
  1. You may also need to increase the number of **Log parser** nodes. As a general rule, you should have slightly more Log parser nodes than Elasticsearch Data nodes.

      <table>
        <tr>
          <td>Log volume</td>
          <td>Elasticsearch Data nodes</td>
          <td>Log parser nodes</td>
        </tr>
        <tr>
          <td>200 / second</td>
          <td>2 x medium.mem (~8GB RAM) with 50GB persistent disks</td>
          <td>2 x small (1 CPU)</td>
        </tr>
        <tr>
          <td>2,000 / second</td>
          <td>~10 x xlarge.mem (~32GB RAM) with 200GB persistent disks</td>
          <td>~15 x medium (2 CPU)</td>
        </tr>
        <tr>
          <td>10,000 / second</td>
          <td>~30 x xlarge.mem (~32GB RAM) with 500GB persistent disks</td>
          <td>~40 x medium (2 CPU)</td>
        </tr>
      </table>

## <a id="resource-usage"></a>Reduce Resource Usage

Pivotal Cloud Foundry (PCF) produces a large amount of logs. As a result, Log Search can consume significant resources. Use the following strategies to reduce the amount of resources consumed by Log Search:

1.  **Reduce the log retention period**: Shorter retention periods dramatically reduce the amount of disk resources required. Navigate to the **Settings** section of the Log Search tile and enter a lower value for **Log retention period**. 
2.  **Index less data**: If you [attached Log Search to the Elastic Runtime firehose](./installing.html#firehose), application logs probably make up a large portion of the total logs indexed. Follow these steps to index less data:
  1. In Kibana, navigate to the **Visualize** tab. 
  1. Select **Pie Chart**. 
  1. Select **From a new search**. 
  1. Search for `tags:LogMessage`. 
  1. Select **Split Chart** in the **buckets** section.<br/>
    <img src="images/buckets.png" width="300px">
  1. Under **Aggregation**, choose **Terms**. 
  1. Under **Field**, choose `cf.app_id`.
  1. Click the play button to update the pie chart. 
  1. Increase or decrease the **Size** value to see results for more or less apps. 
  1. Examine the pie chart to see if any apps produce a disproportionately high number of log entries.
  1. Reduce the logging verbosity of the apps identified above.